" vundle setup
source ~/.vundle
filetype indent plugin on
" comment these up
set shiftwidth=2
set tabstop=2
" Search while you enter the query, not after
set incsearch
" Highlight matching braces/tags
set showmatch
set background=dark
" enable line numbers
set number
set clipboard=unnamedplus
" make it possible to view different buffers without having to save first
set hidden
" lines of code will not wrap to the next line
set nowrap
syntax on
" Enable the list of buffers
let g:airline#extensions#tabline#enabled = 1
" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'
" mappings
let mapleader = "-"
" enable easy switching between buffers
" next/previous
map <leader>- :bn<cr>
map <leader>0 :bp<cr>
" create new buffer and prompt for filename (there must be a better approach than add space)
" remove space to then enable save?)
map <leader>= :enew<cr>i<space><bs><esc>:f 
" remove buffer
map <leader><bs> :bd!<cr>
" comment / uncomment
map <leader>/ :s/^/\/\/<cr>
map <leader>? :s/^\/\//<cr>
" regex replace in file
map <leader>r :%s/\v
map <leader>l :s/\v
" ctrlp
map <leader>p :CtrlP<cr>
" easier switch between windows
map <leader>w <c-w>w
map <leader>x i<c-x>
" add double space to the end of markdown files so they appear correctly
map <leader>q :%s/\(  \)\@<!$/  <cr>
" Use ; instead of : to enter command
nnoremap ; :
" enable the silver searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif
" bind <leader>n to grep word under cursor
nnoremap <leader>n :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>
" bind <leader>s to grep shortcut
nnoremap <leader>s :Ag<SPACE>
command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!
" Change netrw directory to the current buffer when opening files.
set autochdir
" leader o toggles netrw file explorer 
function! ToggleNetrw()
	if &ft ==# 'netrw'
		:execute ":b"
	else
		:execute ":E"
	endif
endfunction
map <leader>o :call ToggleNetrw()<cr>
augroup vimrc
	au BufReadPre * setlocal foldmethod=indent
augroup END
setlocal foldtext=MyFoldText()
function! MyFoldText()
  return "za/zi"
endfunction
map <leader>t :r ~/vimfiles/
set noswapfile
map / /\v
map ? ?\v
